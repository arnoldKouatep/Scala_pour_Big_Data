/*
	Ce fichier a pour extension .scala donc il est directement executable dans la console de scala
	Pour l'executer scala doit etre installe dans votre machine, je vous invite donc a suivre le chapitre suivant pour l'installation
	Une fois cela fait vous n'aurez qu'a lancer les commandes suivantes"
	Commencez un REPL de Scala en tapant juste scala. Vous devriez voir le prompteur :

	  scala>

	  C'est ce qu'on appelle un REPL (Read-Eval-Print-Loop), c'est une interface de programmation interactive.
	  Vous pouvez y exécuter des commandes.
	  Allons-y 
	  
	  Pour executer un fichier en ligne de commande
	---->:load scalaLanguage.scala


*/







println("*********************************Exercises:**************************************************************")
println("1.Learn about the Java language and its associated terms, such as JDK, JRE, bytecode, and JVM.")
println("2.Learn why Scala was developed.")
println("3.Research more about Apache Spark.")
println("4.Understand the different use cases for Big Data.")
println("5.Understand the various applications of Scala.")
println("6.Research the other famous products developed in Scala, and if possible, why?")
println("7.Research concerns about the performance of certain languages, such as Python.")
println("********************************************************************************************************")

println("  ")
println("")
println("********************************************************************************************************")
println("1. Learn about the Java language and its associated terms, such as JDK, JRE, bytecode, and JVM.        ")
println("********************************************************************************************************")
println("  ")
println("	--> Java is a modern programming language developed by Sun Microsystems (now acquired by         ")
println("Oracle). Java is a portable language because it can be deployed on several environments")
println("such as linux, windows, Mac. Java allows you to create window or console applications,")
println("applets, mobile applications, and many others.")
println("  ")
println("	--> JDK (Java Development Kit) is a set of basic software libraries of the Java programming")
println("language, as well as the tools with which Java code can be compiled, transformed into")
println("bytecode intended for the Java virtual machine.")
println("  ")
println("	--> JRE (Java Runtime Environment) is a Java development environment that consists of a")
println("virtual machine, software libraries used by Java programs and a plugin to allow the")
println("execution of these programs from web browsers")
println("  ")

println("	--> Byte code: In computing, it is an intermediate code between the machine instructions and")
println("the source code, which is not directly executable.")
println("	--> JVM (Java Virtual Machine) is a fictional computing device that runs programs compiled as")
println("Java bytecode. It executes the instructions given by the bytecode contained in the Java class")
println("following the stack model: each stack level contains the data specific to each operation.")
println("  ")

println("********************************************************************************************************")
println("2. Learn why Scala was developed")
println("********************************************************************************************************")
println("  ")
println("Scala is a multi-paradigm programming language (object-oriented, imperative and")
println("functional paradigm) designed at the Swiss Federal Institute of Technology Lausanne")
println("(EPFL) to express common programming patterns in a concise and elegant form. Its name")
println("comes from the English Scalable language which roughly means “adaptable language”. It is")
println("intended to be compiled into Java bytecode (executable on the JVM), or .NET. Only the")
println("Java platform is officially supported by EPFL.")
println("  ")

println("********************************************************************************************************")
println("3.Research more about Apache Spark.")
println("********************************************************************************************************")
println("  ")
println("Spark is an open source distributed computing framework created by Martin Odersky in")
println("2001. It is a set of tools and software components structured according to a defined")
println("architecture. Developed at the University of California at Berkeley by AMPLab, Spark is")
println("now a project of the Apache Foundation. Spark is now an Apache Foundation project. This")
println("product is a big data processing application framework for performing large-scale complex")
println("analyses.")
println("  ")

println("********************************************************************************************************")
println("4.Understand the different use cases for Big Data.")
println("********************************************************************************************************")
println("  ")
println("Spark is the new In-Memory brick of Hadoop distributions. Thanks to the richness of its")
println("libraries, Spark meets your Big Data needs or those requiring fast response times or to")
println("perform advanced calculations. The Spark solution interfaces with Yarn to benefit from the")
println("allocated resources. Spark integrates data analysis and data science tools. Indeed, Spark")
println("Streaming allows access to real-time data via the following tools: Spark SQL to query and")
println("modify data as with classic queries, Spark MLib for Machine Learning models and GraphX")
println("for calculation and creation of graphs.")
println("  ")

println("********************************************************************************************************")
println("5.Understand the various applications of Scala.")
println("********************************************************************************************************")
println("Parallelization of tasks is made easier with Scala because many third-party libraries can be")
println("used for specific tasks. With fewer lines of code than Java, Scala takes less time to code. It")
println("also offers various tools and APIs that can be used for a wide variety of applications. In")
println("addition, Scala is used for a variety of use cases. It is used for writing web applications, for")
println("data streaming applications, for concurrent and distributed applications, for parallel batch")
println("processing, and for data analysis with Apache Spark.")
println("  ")
println("********************************************************************************************************")
println("7.Research concerns about the performance of certain languages, such as Python.")
println("********************************************************************************************************")
println("  ")
println("	--> Scala vs Python for Apache Spark")
println("Apache Spark, the popular Big Data analytics framework, is written in Scala. This is what allows it")
println("to offer high speed due to its static nature. However, Spark offers APIs for Scala, Python, Java and")
println("R. The two most commonly used languages for Spark are Scala and Python.")
println("In terms of performance, Scala is ten times faster than Python. Scala uses Java Virtual Machines")
println("during runtime, which provides increased speed in most cases. The dynamic nature of Python also")
println("reduces its speed.")
println("  ")
println("Spark libraries must be called by Python, and this requires a lot of code processing. In this case,")
println("Scala works well with a limited number of cores.")
println("In addition, Scala interacts better with Hadoop services and in particular the HDFS file system on")
println("which Spark is based. With Python, developers must use third-party libraries like Hadoopy, whereas")
println("Scala interacts with Hadoop via native Java APIs. This makes it easier to write native Hadoop")
println("applications in Scala.")
println("  ")
println("Some data scientists prefer Scala and others prefer Python. The choice obviously depends on the")
println("use cases, but DataScientest recommends learning Python first.")
println("  ")
println("Both languages are object-oriented and functional. Their syntax has similarities, and both have a")
println("large community of enthusiastic users. However, Scala can be a bit more difficult to learn than")
println("Python. However, it is better suited for more complex workflows. Python, on the other hand, has a")
println("simple syntax and many good libraries.")
println("  ")
println("Thanks to its multiple libraries, Scala allows for the rapid integration of databases in Big Data")
println("ecosystems. The language allows writing code with multiple concurrency primitives, whereas")
println("Python does not support concurrency or multithreading. This concurrency feature allows Scala to")
println("provide better data processing and memory management.Nevertheless, Python does support process forking.")
println("Only one thread is active at a time, and more")
println("processes must be restarted each time code is deployed. This increases the memory overhead.")
println("In terms of usage, Scala and Python are two expressive languages that allow a high level of")
println("functionality. Python's strong point is its conciseness, and its more intuitive use. On the other hand,")
println("Scala is more powerful in terms of frameworks, libraries and macros. Its functional nature gives it a")
println("synergy with the Mapreduce framework.")
println("  ")
println("Many Scala data frameworks follow abstract data types consistent with the Scala API collection.")
println("Developers need to learn the basic standard collections, and can then easily learn other libraries.")
println("Note that Spark is written in Scala. Therefore, knowing Scala allows one to understand and modify")
println("the inner workings of Spark. In addition, many upcoming features will have APIs in Scala and Java")
println("first, and then in Python in later versions.")
println("  ")
println("However, for Natural Language Processing (NLP), Python is preferred, as Scala does not offer")
println("many tools for Machine Learning and NLP. Similarly, Python is favored for the use of GraphX,")
println("GraphFrames, and MLLib. Python's visualization libraries complement Pyspark, and neither Spark")
println("nor Scala offer an equivalent.")
println("  ")
println("Regarding security and code restoration, Scala is a static language that allows to find compile time")
println("errors. Python, on the other hand, is a dynamic language that is highly prone to bugs with each")
println("change made to the existing code. Refactoring code is therefore easier on Scala than on Python.")
println("In conclusion, Python is slower and easier to use. Scala is faster and moderately easy to use. Since")
println("Spark is written in Scala, this language gives early access to new features. However, choosing the")
println("best language for Apache Spark depends on the needs of the project. While Python is more data")
println("analysis oriented, Scala is engineering oriented")
println("   ")
println("   ")
println("	-->Differences between Scala and Java:")

println("   ")
println("First and Major difference you will notice between Scala and Java is succinct and concise code. Scala drastically reduces the number of lines from a Java application by making clever use of type inference, treating everything as an object, function passing, and several other features.")
println("   ")
println("Scala is designed to express common programming patterns in an elegant, concise and typesafe way. The language itself encourage you to write code in immutable style, which makes applying concurrency and parallelism easily.")
println("   ")
println("One of Scala’s cool feature is built-in lazy evaluation, which allows deferring time-consuming computation until absolutely needed and you can do this by using a keyword called “lazy”.")
println("   ")
println("One more difference between Scala and Java is that Scala supports Operator overloading. You can overload any operator in Java and you can also create new operators for any type, but as you already know, Java doesn’t support Operator Overloading.")
println("   ")
println("Another major difference between Java and Scala is that functions are objects in Java. Scala treats any method or function as they are variables. When means, you can pass them around like Object. You might have seen the code, where one Scala function is accepting another function. In fact, this gives the language enormous power.")
println("   ")
println("The significant distinction between Scala and Java is a compact and concise code. In Scala, coding is lower to a variety of lines, which is not the cases about Java. The codes that is written in Java can be written in Scala in half the numbers of lines. Scala utilizes ‘type reasoning’ very cleverly to deal with everything as an object, pass the function, and several other functions.")
println("   ")
println("The learning curve of the Scala vs java programming language is high as compared to that of Java. The coding in Scala can be extremely challenging to predict due to less coding. Also, the syntax in Scala is more complicated than Java.")
println("   ")
println("Scala consists of nested coding is the(functions inside a function, inside of an object, inside a class) that makes the code less understandable than Java. Some of times, it improves clarity, but it can be really challenging if composed poorly.")
println("   ")
println("Another major distinction between these two programming languages is that functions are nothing but the items in Java whereas, in Scala vs java functions vary.")
println("   ")
println("Scala is not backward compatible, which means that code runs in the current version only. Java is backward suitable; it enables code to work on older and more recent versions likewise with no error.")
